
@using LKaifer_BugTracker.Models
@model Ticket

@{
    ViewBag.Title = "Enter A Project";
    Project project = ViewBag.ProjectExist as Project;
}
    <style>
        h2 {
            text-shadow: 2px 2px 5px red;
        }
    </style>


@if (project != null)
{
<h2><i class="fa fa-list-alt"></i> Current Project : @project.Name</h2>
    <br />
}



@using (Html.BeginForm("Create", "Tickets", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4><i class="fa fa-tasks"></i> Ticket</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (ViewBag.ProjectExist != null)
    {
        <input type="hidden" name="ProjectId" value="@project.Id" />
    }
    else
    {
        <div class="form-group">
            @Html.LabelFor(model => model.ProjectId, "Project", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ProjectId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProjectId, "", new { @class = "text-danger" })
            </div>
        </div>
    }


    <div class="form-group">
        @Html.LabelFor(model => model.TicketTypeId, "Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.TicketPriorityId, "Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TicketAttachments, "Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input name="files" type="file" class="form-control" id="fileUpload" multiple />
        </div>
    </div>
    <button type="submit" class="shrink" style="background-color:#0b7bc1; color:antiquewhite">
        Create New Ticket
    </button>
</div>
}

<a href=@Url.Action("Index", "Tickets")>
    <div class="button">
        <p class="btnText">Back to List?</p>
        <div class="btnTwo">
            <p class="btnText2">GO!</p>
        </div>
    </div>
</a>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
